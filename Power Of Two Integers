def isPower(self, A):
  if A==1:
    return True
  for i in range(2,int(math.sqrt(A))+1):
    power=1/float(i)
    if str(A**power)[-1]=='0':
		  return True
  return False
  
  
  #Given a positive integer which fits 
  #in a 32 bit signed integer, find if it
  #can be expressed as A^P where P > 1 and A > 0. 
  #A and P both should be integers.
  
  # The way to do this is to take successive root power of integers incremented till square root of A and taking float of the values
  # how to take float: 1/float(2)
